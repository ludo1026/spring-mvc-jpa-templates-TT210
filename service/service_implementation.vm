#set( $tools = $loader.newInstance("Tools") )
##--------------------------------------------------------------------------------------------------------
package ${target.javaPackageFromFolder(${SRC})};

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import ${ENTITY_PKG}.${entity.name};
#if ( $entity.hasCompositePrimaryKey() )
import ${ENTITY_PKG}.${tools.keyType($entity)};
#end
import ${ROOT_PKG}.dao.jpa.${entity.name}Dao;
import ${ROOT_PKG}.dao.repository.${entity.name}Repository;
import ${ROOT_PKG}.service.${entity.name}Service;

/**
 * Service : ${entity.name}.
 */
@Component
@Transactional
public class ${entity.name}ServiceImpl implements ${entity.name}Service {
	
	@Resource
	private ${entity.name}Dao ${tools.uncapitalize($entity.name)}Dao;
	@Resource
	private ${entity.name}Repository ${tools.uncapitalize($entity.name)}Repository;
	
	@Transactional(readOnly=true)
	public ${entity.name} findById(final ${tools.keyType($entity)} ${tools.keyName($entity)}) {
		return ${tools.uncapitalize($entity.name)}Repository.findOne(${tools.keyName($entity)});
	}
	
	@Transactional(readOnly=true)
	public List<${entity.name}> findAll() {
		List<${entity.name}> ${tools.uncapitalize($entity.name)}s = new ArrayList<${entity.name}>();
		for (${entity.name} ${tools.uncapitalize($entity.name)} : ${tools.uncapitalize($entity.name)}Repository.findAll()) {
			${tools.uncapitalize($entity.name)}s.add(${tools.uncapitalize($entity.name)});
		}
		return ${tools.uncapitalize($entity.name)}s;
	}
	
	@Transactional(readOnly=true)
	public Page<${entity.name}> findAllByPage(Pageable pageable) {
		return ${tools.uncapitalize($entity.name)}Repository.findAll(pageable);
	}
	
	public ${entity.name} save(final ${entity.name} ${tools.uncapitalize($entity.name)}) {
		return ${tools.uncapitalize($entity.name)}Repository.save(${tools.uncapitalize($entity.name)});
	}

	public void delete(final ${tools.keyType($entity)} ${tools.keyName($entity)}) {
		${tools.uncapitalize($entity.name)}Repository.delete(${tools.keyName($entity)});
	}

}
