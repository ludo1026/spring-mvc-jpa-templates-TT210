#set( $tools = $loader.newInstance("Tools") )
##--------------------------------------------------------------------------------------------------------
package ${target.javaPackageFromFolder(${SRC})};

import java.lang.reflect.Type;
import java.util.List;

import javax.annotation.Resource;

import ${ROOT_PKG}.bean.${entity.name};
#if ( $entity.hasCompositePrimaryKey() )
import ${ROOT_PKG}.bean.${tools.keyType($entity)};
#end
import ${ROOT_PKG}.service.${entity.name}Service;
import ${ROOT_PKG}.view.manager.${entity.name}ListViewManager;
import ${ROOT_PKG}.view.manager.base.AbstractViewManager;
import ${ROOT_PKG}.view.model.${entity.name}ListViewModel;
import org.modelmapper.TypeToken;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.Model;

@Transactional
@Component
public class ${entity.name}ListViewManagerImpl extends AbstractViewManager implements ${entity.name}ListViewManager {
	
	@Resource
	private ${entity.name}Service ${entity.name.toLowerCase()}Service;
	
	@Override
	public void list(Model model) {
		List<${entity.name}> ${entity.name.toLowerCase()}s = ${entity.name.toLowerCase()}Service.findAll();
		
		List<${entity.name}ListViewModel> ${entity.name.toLowerCase()}ListViewModels = modelMapperHelper.map(${entity.name.toLowerCase()}s, ${entity.name}ListViewModel.class);
		
		model.addAttribute("list${entity.name}s", ${entity.name.toLowerCase()}ListViewModels);
	}

	@Override
	public void delete(${tools.keyType($entity)} ${tools.keyName($entity)}) {
		${entity.name.toLowerCase()}Service.delete(${tools.keyName($entity)});
	}
	
}
